/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_groupsession_free(a: number): void;
export function groupsession_new(): number;
export function groupsession_session_id(a: number, b: number): void;
export function groupsession_session_key(a: number, b: number): void;
export function groupsession_message_index(a: number): number;
export function groupsession_encrypt(a: number, b: number, c: number, d: number): void;
export function groupsession_pickle(a: number, b: number, c: number, d: number): void;
export function groupsession_from_pickle(a: number, b: number, c: number, d: number, e: number): void;
export function __wbg_decryptedmessage_free(a: number): void;
export function __wbg_get_decryptedmessage_plaintext(a: number, b: number): void;
export function __wbg_set_decryptedmessage_plaintext(a: number, b: number, c: number): void;
export function __wbg_get_decryptedmessage_message_index(a: number): number;
export function __wbg_set_decryptedmessage_message_index(a: number, b: number): void;
export function __wbg_inboundgroupsession_free(a: number): void;
export function inboundgroupsession_new(a: number, b: number, c: number): void;
export function inboundgroupsession_import(a: number, b: number, c: number): void;
export function inboundgroupsession_session_id(a: number, b: number): void;
export function inboundgroupsession_first_known_index(a: number): number;
export function inboundgroupsession_export_at(a: number, b: number, c: number): void;
export function inboundgroupsession_decrypt(a: number, b: number, c: number, d: number): void;
export function inboundgroupsession_pickle(a: number, b: number, c: number, d: number): void;
export function inboundgroupsession_from_pickle(a: number, b: number, c: number, d: number, e: number): void;
export function inboundgroupsession_from_libolm_pickle(a: number, b: number, c: number, d: number, e: number): void;
export function __wbg_sas_free(a: number): void;
export function sas_new(): number;
export function sas_public_key(a: number, b: number): void;
export function sas_diffie_hellman(a: number, b: number, c: number, d: number): void;
export function __wbg_establishedsas_free(a: number): void;
export function establishedsas_bytes(a: number, b: number, c: number): number;
export function establishedsas_calculate_mac(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function establishedsas_calculate_mac_invalid_base64(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function establishedsas_verify_mac(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function __wbg_sasbytes_free(a: number): void;
export function sasbytes_emoji_indices(a: number, b: number): void;
export function sasbytes_decimals(a: number, b: number): void;
export function __wbg_account_free(a: number): void;
export function __wbg_inboundcreationresult_free(a: number): void;
export function inboundcreationresult_session(a: number): number;
export function inboundcreationresult_plaintext(a: number, b: number): void;
export function account_new(): number;
export function account_from_pickle(a: number, b: number, c: number, d: number, e: number): void;
export function account_from_libolm_pickle(a: number, b: number, c: number, d: number, e: number): void;
export function account_pickle(a: number, b: number, c: number, d: number): void;
export function account_ed25519_key(a: number, b: number): void;
export function account_curve25519_key(a: number, b: number): void;
export function account_sign(a: number, b: number, c: number, d: number): void;
export function account_max_number_of_one_time_keys(a: number): number;
export function account_one_time_keys(a: number, b: number): void;
export function account_generate_one_time_keys(a: number, b: number): void;
export function account_fallback_key(a: number, b: number): void;
export function account_generate_fallback_key(a: number): void;
export function account_mark_keys_as_published(a: number): void;
export function account_create_outbound_session(a: number, b: number, c: number, d: number, e: number, f: number): void;
export function account_create_inbound_session(a: number, b: number, c: number, d: number, e: number): void;
export function __wbg_session_free(a: number): void;
export function session_pickle(a: number, b: number, c: number, d: number): void;
export function session_from_pickle(a: number, b: number, c: number, d: number, e: number): void;
export function session_from_libolm_pickle(a: number, b: number, c: number, d: number, e: number): void;
export function session_session_id(a: number, b: number): void;
export function session_session_matches(a: number, b: number): number;
export function session_encrypt(a: number, b: number, c: number): number;
export function session_decrypt(a: number, b: number, c: number): void;
export function __wbg_olmmessage_free(a: number): void;
export function __wbg_get_olmmessage_ciphertext(a: number, b: number): void;
export function __wbg_set_olmmessage_ciphertext(a: number, b: number, c: number): void;
export function __wbg_get_olmmessage_message_type(a: number): number;
export function __wbg_set_olmmessage_message_type(a: number, b: number): void;
export function olmmessage_new(a: number, b: number, c: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export function __wbindgen_exn_store(a: number): void;
